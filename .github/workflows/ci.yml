name: ci

on:
  workflow_dispatch: # 添加手动触发
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

jobs:
  build:
    name: Lint CLI and run cargotests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            clients/cli
            proto

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install protoc
        uses: arduino/setup-protoc@v3

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./clients/cli

      - name: Format
        working-directory: clients/cli
        run: |
          rustfmt src/**/*.rs --check --edition 2021

      - name: Build
        working-directory: clients/cli
        run: |
          cargo build --release
          ls target/release

      - name: Compress target/release/
        working-directory: clients/cli
        run: |
          echo "Compressing the target/release directory..."
          tar -czf $GITHUB_WORKSPACE/artifacts/release.tar.gz -C target release
          echo "Compression completed."


      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: $GITHUB_WORKSPACE/artifacts/release.tar.gz
          if-no-files-found: warn
          include-hidden-files: false
          
      # - name: Save Binary
      #   working-directory: clients/cli
      #   run: |
      #     # Create the artifacts directory
      #     mkdir -p $GITHUB_WORKSPACE/artifacts
          
      #     # Define the binary name
      #     BINARY_NAME="prover"
          
      #     # List the files in target/release to verify the binary exists
      #     ls -l target/release/
          
      #     # Check if the binary exists before copying
      #     if [ -f "target/release/$BINARY_NAME" ]; then
      #       # Copy the build artifact to the artifacts directory
      #       cp target/release/$BINARY_NAME $GITHUB_WORKSPACE/artifacts/$BINARY_NAME
      #       echo "Successfully copied the binary to artifacts."
      #     else
      #       echo "Binary $BINARY_NAME not found in target/release"
      #     fi
      
      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: binaries
      #     path: $GITHUB_WORKSPACE/artifacts/
      #     if-no-files-found: warn
      #     include-hidden-files: false
